{
  "@context": [
    "https://www.w3.org/2019/wot/td/v1"
  ],
  "title": "AirQualityMonitor",
  "id": "urn:dev:ops:air-quality-monitor",
  "security": "basic_sc",
  "securityDefinitions": {
    "basic_sc": {
      "scheme": "basic",
      "in": "message"
    }
  },
  "properties": {
    "temperature": {
      "type": "object",
      "description": "Current temperature in \u00b0C",
      "readOnly": true,
      "observable": true,
      "properties": {
        "value": {
          "type": "number"
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/sensors/temperature",
          "contentType": "application/json",
          "op": [
            "observeproperty"
          ],
          "mqv:controlPacketValue": 3,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "humidity": {
      "type": "object",
      "description": "Current humidity in %",
      "readOnly": true,
      "observable": true,
      "properties": {
        "value": {
          "type": "number"
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/sensors/humidity",
          "contentType": "application/json",
          "op": [
            "observeproperty"
          ],
          "mqv:controlPacketValue": 3,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "co2": {
      "type": "object",
      "description": "CO\u2082 level in ppm",
      "readOnly": true,
      "observable": true,
      "properties": {
        "value": {
          "type": "number"
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/sensors/co2",
          "contentType": "application/json",
          "op": [
            "observeproperty"
          ],
          "mqv:controlPacketValue": 3,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "noise": {
      "type": "object",
      "description": "Noise level in dB",
      "readOnly": true,
      "observable": true,
      "properties": {
        "value": {
          "type": "number"
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/sensors/noise",
          "contentType": "application/json",
          "op": [
            "observeproperty"
          ],
          "mqv:controlPacketValue": 3,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "fan": {
      "type": "object",
      "description": "Current fan state (ON/OFF)",
      "readOnly": true,
      "observable": true,
      "properties": {
        "state": {
          "type": "string"
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/status/fan",
          "contentType": "application/json",
          "op": [
            "observeproperty"
          ],
          "mqv:controlPacketValue": 3,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "buzzer": {
      "type": "object",
      "description": "Current buzzer state (ON/OFF)",
      "readOnly": true,
      "observable": true,
      "properties": {
        "state": {
          "type": "string"
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/status/buzzer",
          "contentType": "application/json",
          "op": [
            "observeproperty"
          ],
          "mqv:controlPacketValue": 3,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "ledStates": {
      "type": "object",
      "description": "State of LEDs per parameter",
      "readOnly": true,
      "observable": true,
      "properties": {
        "temperature": {
          "type": "string",
          "enum": [
            "GREEN",
            "RED"
          ]
        },
        "humidity": {
          "type": "string",
          "enum": [
            "GREEN",
            "RED"
          ]
        },
        "co2": {
          "type": "string",
          "enum": [
            "GREEN",
            "RED"
          ]
        },
        "noise": {
          "type": "string",
          "enum": [
            "GREEN",
            "RED"
          ]
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/status/leds",
          "op": [
            "observeproperty"
          ],
          "contentType": "application/json",
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "thresholds": {
      "type": "object",
      "readOnly": true,
      "observable": true,
      "properties": {
        "temperature": {
          "type": "number"
        },
        "humidity": {
          "type": "number"
        },
        "co2": {
          "type": "number"
        },
        "noise": {
          "type": "number"
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/status/thresholds",
          "op": [
            "observeproperty"
          ],
          "contentType": "application/json",
          "username": "esp32user",
          "password": "password"
        }
      ]
    }
  },
  "actions": {
    "setFanState": {
      "title": "Set Fan State",
      "input": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "ON",
              "OFF"
            ]
          }
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/actuator/fan",
          "contentType": "application/json",
          "op": [
            "invokeaction"
          ],
          "mqv:controlPacketValue": 2,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "setBuzzerState": {
      "title": "Set Buzzer State",
      "input": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "enum": [
              "ON",
              "OFF"
            ]
          }
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/actuator/buzzer",
          "contentType": "application/json",
          "op": [
            "invokeaction"
          ],
          "mqv:controlPacketValue": 2,
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "setTemperatureLimit": {
      "title": "Set Temperature Alarm Threshold",
      "input": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number"
          }
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/config/threshold/temperature",
          "op": [
            "invokeaction"
          ],
          "contentType": "application/json",
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "setHumidityLimit": {
      "title": "Set Humidity Alarm Threshold",
      "input": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "maximum": 100
          }
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/config/threshold/humidity",
          "op": [
            "invokeaction"
          ],
          "contentType": "application/json",
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "setCo2Limit": {
      "title": "Set CO\u2082 Alarm Threshold",
      "input": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 300,
            "maximum": 5000
          }
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/config/threshold/co2",
          "op": [
            "invokeaction"
          ],
          "contentType": "application/json",
          "username": "esp32user",
          "password": "password"
        }
      ]
    },
    "setNoiseLimit": {
      "title": "Set Noise Alarm Threshold",
      "input": {
        "type": "object",
        "properties": {
          "value": {
            "type": "number",
            "minimum": 0,
            "maximum": 150
          }
        }
      },
      "forms": [
        {
          "href": "mqtt://localhost:1883/config/threshold/noise",
          "op": [
            "invokeaction"
          ],
          "contentType": "application/json",
          "username": "esp32user",
          "password": "password"
        }
      ]
    }
  }
}